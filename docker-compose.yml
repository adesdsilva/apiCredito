services:
  backend:
    build:
      context: ./consulta-credito-api
      dockerfile: Dockerfile
    container_name: consulta-credito-api
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/credito_db # Usar 'postgres' como hostname, que é o nome do serviço do banco de dados
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=admin
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=org.postgresql.Driver
    depends_on:
      postgres:
        condition: service_healthy # Garante que o Postgres esteja saudável antes de iniciar o backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s # Aumentado para dar mais tempo ao Spring Boot para inicializar
    restart: unless-stopped
    networks:
      - app-network

  postgres:
    image: postgres:16
    container_name: postgres
    environment:
      - POSTGRES_DB=credito_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=admin
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql-scripts:/docker-entrypoint-initdb.d
    healthcheck: # Adicionando healthcheck para o Postgres para garantir que ele esteja pronto
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend-credito
      dockerfile: Dockerfile
    container_name: frontend-credito
    ports:
      - "8000:4200"
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4200"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    restart: unless-stopped
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge